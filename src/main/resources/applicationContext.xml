<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
			http://www.springframework.org/schema/context
    		http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:datasource.properties</value>
		</property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
		
		<property name="initialSize" value="${initialSize}"/>
		<property name="maxActive" value="${maxActive}"/>
		<property name="maxIdle" value="${maxIdle}"/>
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxWait" value="${maxWait}"/>
		<property name="removeAbandoned" value="${removeAbandoned}"/>
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		<property name= "testWhileIdle" value="${testWhileIdle}"/>
		<property name= "validationQuery" value="${validationQuery}"/>
		<property name= "testOnBorrow" value="${testOnBorrow}"/>
		<property name= "testOnReturn" value="${testOnReturn}"/>
		<property name= "timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
		<property name= "numTestsPerEvictionRun" value="${numTestsPerEvictionRun}"/>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis.xml"></property>
		<property name="mapperLocations" value="classpath*:com/lyc/entity/*.xml"/>
	</bean>
	<!-- dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lyc.dao" />
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- 开启注解 -->
	<context:component-scan base-package="com.lyc.service"></context:component-scan>
	<!-- 事务 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="search*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="change*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED"/>
			<tx:method name="login*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* com.lyc.service.impl.*.*(..))" id="servicePoint"/>
	</aop:config>
</beans>